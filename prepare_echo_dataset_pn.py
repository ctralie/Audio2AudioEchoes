"""
Prepare a pseudorandom noise echo dataset for the models
"""

import argparse
import subprocess
import numpy as np
from src.audioutils import load_audio_fast_wav
from src.echohiding import echo_hide_pn
from src.utils import walk_dir
import time
import glob
import os
from scipy.io import wavfile
from multiprocessing import Pool

# A set of 8 1024-bit PN patterns whose pairwise correlations are roughly equally distributed
# between 0 and 1024
PN_PATTERNS_1024_8 = ["1010101001001010110100100101010110011001001010110101101001010010100110101101010110010010100101001010110101010101010010010010101010101010110101001100101010010101010101001001010010101010101011001010010010010110101011010101010101101001011001011010100101010110110011011001011010110101100110101101001010101011001011010101010101010011010110100110101101001001101010101010110100101001101010101010011010101101011010010100110010101010110011010100101010110101010101010101010011010110010101001010100101010101101010110010101010101011010100110101011010110010101010101101001010101011001010101010010101010101011010101010101010110100100110100101010110010011010100101010110110010011010101011010101011010100110101101010100110011010010101101010110101010101001101010101010101010011011010101010101011010011010101010011001011010101101010101010110101101101101101001011011010101101100101101010101010101010101101001101010010101101011010100100110101101010101010101010100110101010101010101011001011010101101010100101010101101010101010101001010010100101", "1010101001001010110100100101010110011001001010110101101010101010100101010101010110010010100101001010110010100101010010010010101010101010110101001100101010010101010101001001010010101010101011001010110010010110101010010101010110101001011001010101010101010110110011011001011010110101100110101101010010101011001011010101010101010011010110100110101101001001101010101010110100101001101010101010011010101101011010010100110010101010110011010100101010110101010101010101010011010110010101001010101011010101101010101010101010110101010100110101011010110010101010101101001010101011001010101101010101010101101010101010101010110101010110101011010101010011010100101010110101010011010101011010101010101100110101101010100110011010010110101010110101010101001101010101101011010101011010101010101010101011010101010011001001010101010110101010110101101010101101001010101010101101100101101010101010101010101101001101010010101101011010100100110101101010101010101010100110101010101010101011001101010101101010100110010110101011010010101001010101010101","1010101001001010110100100101010110011001001010110101101010101010100101010101010110010010100101001010110010100101010011010010101001101010110101001100101010010101010101001001010010101010101011001010110010010110101010010101010110101001011001011010100101010110110011011001011010110101100110100101010010101001001010100101010101010011010110100110101101001001101010101011010100101001101010101010011010101011011010010100110010101010110011011010010110010101010101010101010011011010010101001010101011010101101010101101101010110110101010110101011010110010101010101101001010101011001010101010010101010101011010101010101010110101010110101011010101010011010101101010110110010011010101011010101011010100110101101010100110011010010110101010110101010101001101010101101011010101011010101010101011010011010101010011010101010101010110101010110101101010101101001010101010101101100101101010101010101010101101001101010101001101011010100100110101101010101010101010100110101010101010101011001101010101101010100101010110101011010010101001010101010101","1010100101001100110100101010101010011001001010110101101010101010010101011010010110010010100101001010110110100110101010010010101011010010110010101100101010010101010101001001010010101010101010101010010011010110101010010101010011001001010101011010101001010110010011011001011010110101100110010101010101101011001011010101010101010011010110101010101100101001100110101010110010101001101010101001001010101001011010010100110010101010110011010100101010110101010101010101010010101011010101010101001011010110101010101010101010110101101010110101011001010010101010100101001010011010101101011010101101010101011010100101010110110101010110101010011011010011010101001010110110101011010101010101010101011010110101010110100110011010100110101010110101010101001101010010101001010101011010101010101011010011010101010011001001010101010110101010101010101010101101001010101010101101100101101010101010110100101101010101010010010101001010100100110101101010100110101001010101010010101010101010100101010101101011001011010110101011001010101001010010110101","1010101010101010100101101010010101011001001011010101101010101010101101010101011010011001100101010010110110101011001011010101101001101011001010101100101011010101010101001101011010101010101011001010010010101010110010100101010110101001101010011010101001011010101011011010110010101001010011010101010010101010101010010101010100101011010110100110101100101010101010101011010101101010101011010101011010110101011011010100110010101010010101101010010110101010110101010101010110011010101010010101001101010101010101001101100110110110101001010101011010100101011010101100101010101010101010101010110110101010110101001010101010101101010110110110110101011001001001011010011010101011010100101010010011010101010100101001101100110010010110101010010110010110101101010101010101010101011010101010110010101010011011010011010101010101010010101010110101101010101100101010100100101001100100101010101010101010101010101011010100100101011010101010101010101011010110101010101010101010101010101010110101010010101010100101001010010101010010101001010010110011","1010101001011010010100100101010110011001001010110101101010101010100101010101010110010010100101001010110011010101010010010010101010101010110101001100101010010101010101001001010010101010101011010110110101010110101010010101010110101001011001011010100101010110110011011001011010110101100110101101010010101011001011010101010101010011010110100110101101001001101010101010110100101010101010101010011010101101011010010100110010101010110011010100101010110101010101010101010011010110010101001010101011010101101010101010101010110101010100110101011010110010101010101101001010101011001010101010010101010101011010101010101010110110100110101011010101010011010100101010110110010011010101011010101011010100110101101010100110011010010110101010110101010101001101010101101011010101011010101010101011010011010101010011001001010101010110101010110101101010101101001010101010101101100101101010101010101010101101001101010010101101011010100100110101101010101010101010100110101010101010101011001101010101101010100101010110101010101010101001010101010101","0100110101010101010100110101101010011010010100101101010010101101010011011001101101010101010100101010110101001101010011001001010100110101001101010110010101010011010100101101010101010010110101010101101010100101100101010101010010010100101001011010100101011010101011011001101010101011010101010010110110110101010110101010101011010101101001101001010101010110101001010101011010101100101101011001010101001010110010010101100110101010110010101011010010010101011010101010101010101010100101010010101010101010101101010101101101101010110100101010101010100101010101100101001010100110100101010100100101010101010011010101010110101011010110110101010101010101010101010101101010101010110100110100100101001001010101010010100110101010101101010100110100101101010010101010101001100101010010101010110101010010101001010011010101010101010010101010101010101010101010011010101001010101010101001101101001010011010100100101010101010101010110010100110100101010010101010101010101010101010100101010011001010110101010010101010110010101011010011011010100110110","1010101001001010110100100101010110011001001010110101101010101010100101010101010110010010100101001010110010100101010010010010101010101010110101001100101010010101010101001001010010101010101011001010110010010110101010010101010110101001011001011010100101010110110011011001011010110101100110101101010010101011001011010101010101010011010110100110101101001001101010101010110100101001101010101010011010101101011010010100110010101010110011010100101010110101010101010101010011010110010101001010101011010101101010101010101010110101010100110101011010110010101010101101001010101011001010101010010101010101011010101010101010110101010110101011010101010011010100101010110110010011010101011010101011010100110101101010100110011010010110101010110101010101001101010101101011010101011010101010101011010011010101010011001001010101010110101010110101101010101101001010101010101101100101101010101010101010101101001101010010101101011010100100110101101010101010101010100110101010101010101011001101010101101010100101010110101011010010101001010101010101"]
PN_PATTERNS_1024_8 = [np.array([int(c)*2-1 for c in q]) for q in PN_PATTERNS_1024_8]

def add_echo(params):
    (filename_in, filename_out, sr, pattern_idx, lag, alpha) = params
    tic = time.time()
    x = load_audio_fast_wav(filename_in, sr)
    q = PN_PATTERNS_1024_8[pattern_idx]
    x = echo_hide_pn(x, q, lag, alpha)
    x = np.array(x*32767, dtype=np.int16)
    wavfile.write(filename_out, sr, x)
    print("{}, {}, Elapsed {}\n\n".format(filename_in, filename_out, time.time()-tic))


def prepare_dataset(dataset_path, output_path, pattern_idx, lag, alpha, temp_dir, sr=44100, n_threads=10, use_rave=True):
    ## Step 1: Cleanup temp directory
    for f in glob.glob("{}/*".format(temp_dir)):
        os.remove(f)
    
    ## Step 2: Gather list of files and send them off to be processed
    filenames_in = walk_dir(dataset_path)
    N = len(filenames_in)
    filenames_out = ["{}/{}.wav".format(temp_dir, i) for i in range(N)]
    with Pool(n_threads) as p:
        p.map(add_echo, zip(filenames_in, filenames_out, [sr]*N, [pattern_idx]*N, [lag]*N, [alpha]*N))
    
    if use_rave:
        ## Step 3: Preprocess with rave
        cmd = ["rave", "preprocess", "--input_path", temp_dir, "--output_path", output_path+"/", "--channels", "1"]
        print(cmd)
        subprocess.call(cmd)

        ## Step 4: Clear temp directory
        for f in glob.glob("{}/*".format(temp_dir)):
            os.remove(f)
    else:
        ## If not using rave, simply move the files directly to their final location
        for f in glob.glob("{}/*".format(temp_dir)):
            cmd = ["mv", f, output_path]
            print(cmd)
            subprocess.call(cmd)

    ## Step 4: Clear temp directory
    for f in glob.glob("{}/*".format(temp_dir)):
        os.remove(f)

    print("Finished")


if __name__ == "__main__":
    # (filename_in, filename_out, sr, pattern_idx delta, alpha) = params
    parser = argparse.ArgumentParser()
    parser.add_argument('--dataset_path', type=str, required=True, help="Path to dataset")
    parser.add_argument('--output_path', type=str, required=True, help="Path to which to output rave prepared dataset")
    parser.add_argument('--pattern_idx', type=int, required=True, help='Index of PN pattern to use')
    parser.add_argument('--lag', type=int, default="75", help='Lag of PN pattern')
    parser.add_argument('--alpha', type=float, default=0.01, help='Strength of echo')
    parser.add_argument('--temp_dir', type=str, required=True, help="Path to temporary folder to which to save modified dataset (cleared before and after echoes are created)")
    parser.add_argument('--sr', type=int, default=44100, help="Audio sample rate")
    parser.add_argument('--n_threads', type=int, default=10, help="Number of threads to use")
    parser.add_argument("--use_rave", type=int, default=1, help="Whether to use rave.")
    opt = parser.parse_args()

    prepare_dataset(opt.dataset_path, opt.output_path, opt.pattern_idx, opt.lag, opt.alpha, opt.temp_dir, opt.sr, opt.n_threads, opt.use_rave==1)
